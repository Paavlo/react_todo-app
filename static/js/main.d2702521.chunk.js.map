{"version":3,"sources":["components/AddTodo/AddTodo.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","App.js","index.js"],"names":["AddTodo","sendTodo","useState","todoTitle","enterTodoTitle","onSubmit","event","preventDefault","id","Date","title","trim","completed","type","className","placeholder","value","onChange","target","Todo","todo","changeProperty","editTitleTools","todoEdited","changeStatusEdit","todosTools","todos","updateTodos","confirmChanges","checked","onDoubleClick","onClick","todoId","updatedTodos","filter","item","localStorage","clear","deleteTodo","autoFocus","defaultValue","onBlur","onKeyDown","key","keyPressed","TodoList","map","ClassNames","editing","TodosFilter","todoTools","FILTER_OPT","all","active","selectedFilter","selectFilter","changeFilter","filterType","length","selected","hidden","some","App","useEffect","getItem","JSON","parse","filteredTodos","FILTER","useMemo","filterBy","setItem","stringify","newTodo","every","htmlFor","property","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2702521.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddTodo = ({ sendTodo }) => {\n  const [todoTitle, enterTodoTitle] = useState('');\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        sendTodo({\n          id: +new Date(),\n          title: todoTitle.trim(),\n          completed: false,\n        });\n\n        enterTodoTitle('');\n      }}\n    >\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={todoTitle}\n        onChange={({ target }) => {\n          enterTodoTitle(target.value);\n        }}\n      />\n    </form>\n  );\n};\n\nAddTodo.propTypes = {\n  sendTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Todo = ({\n  todo: { id, title, completed },\n  changeProperty,\n  editTitleTools: [todoEdited, changeStatusEdit],\n  todosTools: { todos, updateTodos },\n}) => {\n  const deleteTodo = (todoId) => {\n    const updatedTodos = todos.filter(item => item.id !== todoId);\n\n    updateTodos(updatedTodos);\n    localStorage.clear('todos');\n  };\n\n  const confirmChanges = (target) => {\n    changeProperty(id, target);\n    changeStatusEdit(null);\n  };\n\n  const keyPressed = (key, target) => {\n    switch (key) {\n      case 'Enter':\n        confirmChanges(target);\n        break;\n\n      case 'Escape':\n        changeStatusEdit(null);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <div\n        className=\"view\"\n      >\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => {\n            changeProperty(id);\n          }}\n        />\n        <label onDoubleClick={(event) => {\n          event.preventDefault();\n          changeStatusEdit(id);\n        }}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => {\n            deleteTodo(id);\n          }}\n        />\n      </div>\n      {\n        todoEdited === id\n        && (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            autoFocus\n            defaultValue={title}\n            onBlur={({ target }) => {\n              confirmChanges(target.defaultValue);\n            }}\n            onKeyDown={({ key, target }) => {\n              keyPressed(key, target.value);\n            }}\n          />\n        )\n      }\n    </>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.objectOf(PropTypes.any).isRequired,\n  changeProperty: PropTypes.func.isRequired,\n  editTitleTools: PropTypes.arrayOf(PropTypes.any).isRequired,\n  todosTools: PropTypes.shape({\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    updateTodos: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { Todo } from '../Todo';\n\nexport const TodoList = ({ changeProperty, todosTools, todos }) => {\n  const [todoEdited, changeStatusEdit] = useState(null);\n\n  return (\n    <ul className=\"todo-list\">\n      {\n        todos.map(todo => (\n          <li\n            key={todo.id}\n            className={ClassNames(\n              { completed: todo.completed },\n              { editing: todoEdited === todo.id },\n            )}\n          >\n            <Todo\n              todo={{ ...todo }}\n              changeProperty={changeProperty}\n              editTitleTools={[todoEdited, changeStatusEdit]}\n              todosTools={todosTools}\n            />\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  changeProperty: PropTypes.func.isRequired,\n  todosTools: PropTypes.objectOf(PropTypes.any).isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nexport const TodosFilter = ({\n  todoTools,\n  filter,\n  FILTER_OPT: { all, active, completed },\n  selectedFilter,\n  selectFilter,\n}) => {\n  const { todos, updateTodos } = todoTools;\n\n  const changeFilter = (filterType) => {\n    selectFilter(filterType);\n    filter(filterType);\n  };\n\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${todos.filter(todo => !todo.completed).length} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <button\n            className={ClassNames(\n              { selected: selectedFilter === all },\n            )}\n            type=\"button\"\n            onClick={() => {\n              changeFilter(all);\n            }}\n          >\n            All\n          </button>\n        </li>\n\n        <li>\n          <button\n            className={ClassNames(\n              { selected: selectedFilter === active },\n            )}\n            type=\"button\"\n            onClick={() => {\n              changeFilter(active);\n            }}\n          >\n            Active\n          </button>\n        </li>\n\n        <li>\n          <button\n            className={ClassNames(\n              { selected: selectedFilter === completed },\n            )}\n            type=\"button\"\n            onClick={() => {\n              changeFilter(completed);\n            }}\n          >\n            Completed\n          </button>\n        </li>\n      </ul>\n\n      <button\n        hidden={!todos.some(todo => todo.completed)}\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => {\n          updateTodos(\n            todos.filter(todo => !todo.completed),\n          );\n        }}\n      >\n        Clear completed\n      </button>\n    </>\n  );\n};\n\nTodosFilter.propTypes = {\n  todoTools: PropTypes.shape({\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    updateTodos: PropTypes.func.isRequired,\n  }).isRequired,\n  filter: PropTypes.func.isRequired,\n  FILTER_OPT: PropTypes.objectOf(PropTypes.string).isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n  selectFilter: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { AddTodo } from './components/AddTodo';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nfunction App() {\n  const [todos, updateTodos] = useState([]);\n\n  useEffect(() => {\n    if (localStorage.getItem('todos')) {\n      updateTodos(\n        JSON.parse(localStorage.getItem('todos')),\n      );\n    }\n  }, []);\n\n  let filteredTodos = [...todos];\n\n  const FILTER = {\n    all: 'All',\n    active: 'Active',\n    completed: 'Completed',\n  };\n  const [selectedFilter, selectFilter] = useState(FILTER.all);\n\n  useMemo(() => filter(selectedFilter), [selectedFilter]);\n\n  const todoTools = {\n    todos,\n    updateTodos,\n  };\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  function filter(filterBy) {\n    switch (filterBy) {\n      case FILTER.active:\n        filteredTodos = filteredTodos.filter(todo => !todo.completed);\n        break;\n      case FILTER.completed:\n        filteredTodos = filteredTodos.filter(todo => todo.completed);\n        break;\n      default:\n        filteredTodos = [...todos];\n        break;\n    }\n  }\n\n  function changeProperty(todoId, property) {\n    updateTodos(\n      todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        if (property) {\n          return {\n            ...todo, title: property,\n          };\n        }\n\n        if (!property) {\n          return {\n            ...todo, completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    );\n  }\n\n  function receiveTodo(newTodo) {\n    updateTodos([\n      newTodo,\n      ...todos,\n    ]);\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <AddTodo\n          sendTodo={receiveTodo}\n        />\n      </header>\n\n      {todos.length > 0\n      && (\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={todos.every(todo => todo.completed)}\n            onChange={({ target }) => {\n              updateTodos(\n                todos.map((todo) => {\n                  if (todo.completed === target.checked) {\n                    return todo;\n                  }\n\n                  return { ...todo, completed: !todo.completed };\n                }),\n              );\n            }}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            changeProperty={changeProperty}\n            todosTools={todoTools}\n            todos={filteredTodos}\n          />\n        </section>\n      )\n      }\n      {todos.length > 0\n      && (\n        <footer className=\"footer\">\n          <TodosFilter\n            todoTools={todoTools}\n            filter={filter}\n            FILTER_OPT={{ ...FILTER }}\n            selectedFilter={selectedFilter}\n            selectFilter={selectFilter}\n          />\n        </footer>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
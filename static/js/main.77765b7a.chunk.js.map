{"version":3,"sources":["components/AddTodo/AddTodo.jsx","components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","components/TodosFilter/TodosFilter.jsx","App.js","index.js"],"names":["AddTodo","sendTodo","useState","todoTitle","enterTodoTitle","onSubmit","event","preventDefault","id","Date","title","trim","completed","type","className","placeholder","value","onChange","target","Todo","todo","changeProperty","editTitle","todosTools","todos","updateTodos","checked","onDoubleClick","onClick","todoId","updatedTodos","filter","item","deleteTodo","defaultValue","onKeyDown","key","TodoList","todoEdited","changeStatusEdit","map","ClassNames","editing","TodosFilter","todoTools","selectedFilter","selectFilter","length","selected","App","filteredTodos","updateFiltered","filterBy","filterdTodos","useEffect","newTodo","hidden","every","toggleAll","document","getElementById","curTodo","htmlFor","property","thisTodo","ReactDOM","render"],"mappings":"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","file":"static/js/main.77765b7a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddTodo = ({ sendTodo }) => {\n  const [todoTitle, enterTodoTitle] = useState('');\n\n  return (\n    <form\n      onSubmit={(event) => {\n        event.preventDefault();\n        sendTodo({\n          id: +new Date(),\n          title: todoTitle.trim(),\n          completed: false,\n        });\n\n        enterTodoTitle('');\n      }}\n    >\n      <input\n        type=\"text\"\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={todoTitle}\n        onChange={({ target }) => {\n          enterTodoTitle(target.value);\n        }}\n      />\n    </form>\n  );\n};\n\nAddTodo.propTypes = {\n  sendTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Todo = ({ todo, changeProperty, editTitle, todosTools }) => {\n  const { id, title, completed } = todo;\n  const { todos, updateTodos } = todosTools;\n\n  const deleteTodo = (todoId) => {\n    const updatedTodos = todos.filter(item => item.id !== todoId);\n\n    updateTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <div\n        className=\"view\"\n      >\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={() => {\n            changeProperty(id);\n          }}\n        />\n        <label onDoubleClick={(event) => {\n          event.preventDefault();\n          editTitle(id);\n        }}\n        >\n          {title}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => {\n            deleteTodo(todo.id);\n          }}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        defaultValue={title}\n        onKeyDown={({ key, target }) => {\n          if (key === 'Enter') {\n            changeProperty(id, target.value);\n            editTitle(null);\n          }\n\n          if (key === 'Escape') {\n            editTitle(null);\n          }\n        }}\n      />\n    </>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.objectOf(PropTypes.any).isRequired,\n  changeProperty: PropTypes.func.isRequired,\n  editTitle: PropTypes.func.isRequired,\n  todosTools: PropTypes.shape({\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    updateTodos: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\nimport { Todo } from '../Todo';\n\nexport const TodoList = ({ changeProperty, todosTools, todos }) => {\n  const [todoEdited, changeStatusEdit] = useState(null);\n\n  return (\n    <ul className=\"todo-list\">\n      {\n        todos.map(todo => (\n          <li\n            key={todo.id}\n            className={ClassNames(\n              { completed: todo.completed },\n              { editing: todoEdited === todo.id },\n            )}\n          >\n            <Todo\n              todo={todo}\n              changeProperty={changeProperty}\n              editTitle={changeStatusEdit}\n              todosTools={todosTools}\n            />\n          </li>\n        ))\n      }\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  changeProperty: PropTypes.func.isRequired,\n  todosTools: PropTypes.objectOf(PropTypes.any).isRequired,\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nexport const TodosFilter = ({\n  todoTools,\n  filter,\n  selectedFilter,\n  selectFilter,\n}) => {\n  const { todos, updateTodos } = todoTools;\n\n  return (\n    <>\n      <span className=\"todo-count\">\n        {`${todos.filter(todo => !todo.completed).length} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <button\n            className={ClassNames(\n              { selected: selectedFilter === 'All' },\n            )}\n            value=\"All\"\n            type=\"button\"\n            onClick={({ target }) => {\n              filter(target.value);\n            }}\n          >\n            All\n          </button>\n        </li>\n\n        <li>\n          <button\n            className={ClassNames(\n              { selected: selectedFilter === 'Active' },\n            )}\n            value=\"Active\"\n            type=\"button\"\n            onClick={({ target }) => {\n              selectFilter(target.value);\n              filter(target.value);\n            }}\n          >\n            Active\n          </button>\n        </li>\n\n        <li>\n          <button\n            className={ClassNames(\n              { selected: selectedFilter === 'Completed' },\n            )}\n            value=\"Completed\"\n            type=\"button\"\n            onClick={({ target }) => {\n              selectFilter(target.value);\n              filter(target.value);\n            }}\n          >\n            Completed\n          </button>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={() => {\n          const updatedTodos = todos.filter(todo => !todo.completed);\n\n          updateTodos(updatedTodos);\n        }}\n      >\n        Clear completed\n      </button>\n    </>\n  );\n};\n\nTodosFilter.propTypes = {\n  todoTools: PropTypes.shape({\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n    updateTodos: PropTypes.func.isRequired,\n  }).isRequired,\n  filter: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n  selectFilter: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { AddTodo } from './components/AddTodo';\nimport { TodoList } from './components/TodoList';\nimport { TodosFilter } from './components/TodosFilter';\n\nfunction App() {\n  const [todos, updateTodos] = useState([]);\n  const [filteredTodos, updateFiltered] = useState([]);\n  const [selectedFilter, selectFilter] = useState('All');\n  const todoTools = {\n    todos,\n    updateTodos,\n  };\n\n  useEffect(() => {\n    updateFiltered(todos);\n    filter(selectedFilter);\n  }, [todos]);\n\n  function filter(filterBy) {\n    selectFilter(filterBy);\n\n    const filterdTodos = todos.filter((todo) => {\n      switch (filterBy) {\n        case 'Active':\n          return !todo.completed;\n\n        case 'Completed':\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n\n    return updateFiltered(filterdTodos);\n  }\n\n  function changeProperty(todoId, property) {\n    const updatedTodos = todos.map((todo) => {\n      const thisTodo = todo;\n\n      if (todo.id === todoId) {\n        if (property) {\n          thisTodo.title = property;\n        }\n\n        if (!property) {\n          thisTodo.completed = !todo.completed;\n        }\n      }\n\n      return thisTodo;\n    });\n\n    updateTodos(updatedTodos);\n  }\n\n  function receiveTodo(newTodo) {\n    !todos\n      ? updateTodos([newTodo])\n      : updateTodos([\n        newTodo,\n        ...todos,\n      ]);\n  }\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos App</h1>\n\n        <AddTodo\n          sendTodo={receiveTodo}\n        />\n      </header>\n\n      <section hidden={todos.length === 0} className=\"main\">\n        <input\n          type=\"checkbox\"\n          id=\"toggle-all\"\n          className=\"toggle-all\"\n          checked={todos.every(todo => todo.completed)}\n          onChange={() => {\n            const toggleAll = document.getElementById('toggle-all');\n            const updatedTodos = todos.map((todo) => {\n              const curTodo = todo;\n\n              curTodo.completed = toggleAll.checked;\n\n              return curTodo;\n            });\n\n            updateTodos(updatedTodos);\n          }}\n        />\n        <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n        <TodoList\n          changeProperty={changeProperty}\n          todosTools={todoTools}\n          todos={filteredTodos}\n        />\n      </section>\n\n      <footer className=\"footer\">\n        <TodosFilter\n          todoTools={todoTools}\n          filter={filter}\n          selectedFilter={selectedFilter}\n          selectFilter={selectFilter}\n        />\n      </footer>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}